Il composite di trova in SessionHistory

è composto da due interfacce
GameHistory (usata per il comando comune a tutto il composite e per la leaf)
Composite: GameHistory (usata per il composite)

Le implemntazioni sono composte da 5 classi:

SessionHistory (
    è un singleton composite, non necessario sia un singleton,
    ma lo rende più facile da usare e da accedere dato che c'è una UI)

GenericComponent (
    è la base dei container (component) del composite,
    contiene i metodi comuni a tutti i container ed eredita da GameHistory per condividere la stessa funzione delle leaf,
    quest'ultima è più che altro una buona pratica in modo da poter avere una sintassi migliore nella lista children)

Difficulty (
    L'unica differenza che ha questa classe da Generic Composite è che aggiunge il "una descrizione alla session history
    nel suo caso specifico sovrascrive il getScore() e aggiunge la difficoltà (il numero di bombe) e un po' di tabulazione")

Size (
    L'unica differenza che ha questa classe da Generic Composite è che aggiunge il "una descrizione alla session history
    nel suo caso specifico sovrascrive il getScore() e aggiunge la dimensione della bord '$Xx$Y' " e un po' di tabulazione)

Game (
    Questa è la leaf, ha solo il metodo getScore implementando l'intefaccia GameHistory,
    non ha la possibilità di risalire al parent per selta,
    L'implemntazione sarebbe:

    interface GameHistory {
    	val parent: Composite? //<-- non presente e rimuoverlo da Composite, non serve che sia GameHistory dato che abbiamo detto che è solo per le leaf
    	fun getScore(): String
    }

    class Game(
        private val state: String,
        override val parent: Composite? //<-- non presente, qui in kotlin di dichiara il costruttore di base e dichiara allo stesso tempo le variabili
    ): GameHistory {
        override fun getScore(): String {
            return state
        }
    }

    )


Difficulty e Size non sono necessari al funzionamento del composite ma rendono più facile la formattazione del testo per la UI
Invece di modificare a mano l'ouptput di GenericComposite



P.S. lo so che la console spamma un sacco di errori di CSS ma il css è marginale all'app e si vede bene lo stesso quindi se non l'ho sistematop per la consegna è perché era noioso